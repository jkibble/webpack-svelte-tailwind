const words = [
  "lorem",
  "ipsum",
  "dolor",
  "sit",
  "amet",
  "consectetur",
  "adipiscing",
  "elit",
  "curabitur",
  "vel",
  "hendrerit",
  "libero",
  "eleifend",
  "blandit",
  "nunc",
  "ornare",
  "odio",
  "ut",
  "orci",
  "gravida",
  "imperdiet",
  "nullam",
  "purus",
  "lacinia",
  "a",
  "pretium",
  "quis",
  "congue",
  "praesent",
  "sagittis",
  "laoreet",
  "auctor",
  "mauris",
  "non",
  "velit",
  "eros",
  "dictum",
  "proin",
  "accumsan",
  "sapien",
  "nec",
  "massa",
  "volutpat",
  "venenatis",
  "sed",
  "eu",
  "molestie",
  "lacus",
  "quisque",
  "porttitor",
  "ligula",
  "dui",
  "mollis",
  "tempus",
  "at",
  "magna",
  "vestibulum",
  "turpis",
  "ac",
  "diam",
  "tincidunt",
  "id",
  "condimentum",
  "enim",
  "sodales",
  "in",
  "hac",
  "habitasse",
  "platea",
  "dictumst",
  "aenean",
  "neque",
  "fusce",
  "augue",
  "leo",
  "eget",
  "semper",
  "mattis",
  "tortor",
  "scelerisque",
  "nulla",
  "interdum",
  "tellus",
  "malesuada",
  "rhoncus",
  "porta",
  "sem",
  "aliquet",
  "et",
  "nam",
  "suspendisse",
  "potenti",
  "vivamus",
  "luctus",
  "fringilla",
  "erat",
  "donec",
  "justo",
  "vehicula",
  "ultricies",
  "varius",
  "ante",
  "primis",
  "faucibus",
  "ultrices",
  "posuere",
  "cubilia",
  "curae",
  "etiam",
  "cursus",
  "aliquam",
  "quam",
  "dapibus",
  "nisl",
  "feugiat",
  "egestas",
  "class",
  "aptent",
  "taciti",
  "sociosqu",
  "ad",
  "litora",
  "torquent",
  "per",
  "conubia",
  "nostra",
  "inceptos",
  "himenaeos",
  "phasellus",
  "nibh",
  "pulvinar",
  "vitae",
  "urna",
  "iaculis",
  "lobortis",
  "nisi",
  "viverra",
  "arcu",
  "morbi",
  "pellentesque",
  "metus",
  "commodo",
  "ut",
  "facilisis",
  "felis",
  "tristique",
  "ullamcorper",
  "placerat",
  "aenean",
  "convallis",
  "sollicitudin",
  "integer",
  "rutrum",
  "duis",
  "est",
  "etiam",
  "bibendum",
  "donec",
  "pharetra",
  "vulputate",
  "maecenas",
  "mi",
  "fermentum",
  "consequat",
  "suscipit",
  "aliquam",
  "habitant",
  "senectus",
  "netus",
  "fames",
  "quisque",
  "euismod",
  "curabitur",
  "lectus",
  "elementum",
  "tempor",
  "risus",
  "cras",
];

const punctuation = [",", ".", "!", "?", ";", ":", '"', "(", ")", "'"];

const emjojis = [
  "👀",
  "🙌",
  "🙏",
  "➕",
  "👏",
  "💡",
  "🎯",
  "👋",
  "👍",
  "🎉",
  "📣",
  "⚪",
  "🔵",
  "🔴",
  "😁",
  "🤣",
  "😃",
  "😊",
  "😅",
  "😉",
  "😳",
  "😋",
  "😎",
  "😛",
  "🌀",
  "🌁",
  "🌊",
  "🐈",
  "🐘",
  "🐼",
  "🐍",
  "🐦",
  "🐤",
  "🐣",
  "🏠",
  "🏡",
  "🏫",
  "🏢",
  "🏤",
  "🇧🇹",
  "🇧🇻",
  "🇧🇼",
  "🇧🇾",
  "🇧🇿",
  "🇨🇦",
];

const addPunctuation = (word) => {
  const chance = Math.floor(Math.random() * 20 + 1);

  if (chance === 20) {
    return `${word} ${emjojis[Math.floor(Math.random() * emjojis.length)]}`;
  }

  if (chance > 17) {
    const punc = punctuation[Math.floor(Math.random() * punctuation.length)];

    if (punc === '"') {
      return `${punc}${word}${punc}`;
    }

    if (punc === "'") {
      return `${word}'s`;
    }

    if (punc === "(" || punc === ")") {
      return `(${word})`;
    }

    return `${word}${punc}`;
  }

  return word;
};

export default (numWords) => {
  let result = "";

  for (let i = 0; i < numWords; i++) {
    let word = words[Math.floor(Math.random() * words.length)];

    if (numWords > 5 && result.length > 10) {
      result += ` ${addPunctuation(word)}`;
    } else {
      result += ` ${word}`;
    }
  }

  return result.toLowerCase().replace(/(^\s*\w|[\.\!\?]\s*\w)/g, function (c) {
    return c.toUpperCase();
  });
};
